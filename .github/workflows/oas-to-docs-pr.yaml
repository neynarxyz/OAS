name: Create Pull Request in Docs Repository

on:
  push:
    branches:
      - cory/oas-to-docs-test # Watch only this branch for changes
    paths:
      - 'src/hub-rest-api/spec.yaml'
      - 'src/v2/spec.yaml'

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout OAS repository
        uses: actions/checkout@v3
        with:
          path: "OAS" # Checkout OAS repository into a directory named "OAS"

      - name: Checkout docs repository
        uses: actions/checkout@v3
        with:
          repository: "neynarxyz/docs.git"
          ref: "main"
          path: "docs" # Checkout docs repository into a directory named "docs"

      - name: Copy updated YAML files to docs repository
        run: |
          cp OAS/src/hub-rest-api/spec.yaml docs/openapi/hub-rest-api/spec.yaml
          cp OAS/src/v2/spec.yaml docs/openapi/v2/spec.yaml

      - name: Commit and push changes
        run: |
          cd docs

          # Set Git config
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Check if there are changes
          if git diff --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          # Create a new branch
          BRANCH_NAME="update-docs-$(date +%Y%m%d%H%M%S)"
          git checkout -b "$BRANCH_NAME"

          # Commit changes
          git add .
          git commit -m "Update OpenAPI YAML files"

          # Push changes
          git push origin "$BRANCH_NAME"

          # Export branch name for the next step
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Create Pull Request via API
        run: |
          # Install jq for JSON parsing
          sudo apt-get update && sudo apt-get install -y jq

          # Prepare JSON payload for the pull request
          DATA=$(jq -n \
            --arg title "Update OpenAPI YAML files" \
            --arg head "$BRANCH_NAME" \
            --arg base "main" \
            --arg body "This pull request updates the OpenAPI YAML files in the docs repository." \
            '{title: $title, head: $head, base: $base, body: $body}')

          echo "Creating Pull Request with data: $DATA"

          # Create the pull request via GitHub API and capture the response
          RESPONSE=$(curl -s -w "%{http_code}" -o response.json -X POST \
            -H "Authorization: token ${{ secrets.OAS_TO_DOCS_FGPAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/neynarxyz/docs/pulls \
            -d "$DATA")

          # Extract HTTP status code
          HTTP_STATUS=$(tail -n1 <<< "$RESPONSE")

          # Check if the request was successful
          if [ "$HTTP_STATUS" -eq 201 ]; then
            echo "Pull request created successfully."
            cat response.json | jq '.html_url' # Print the URL of the created pull request
          else
            echo "Failed to create pull request. HTTP status: $HTTP_STATUS"
            cat response.json | jq '.message' # Print the error message
            exit 1
          fi
        shell: bash